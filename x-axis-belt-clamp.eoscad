//This is an ImplicitCad file
//Run using the extopenscad program
//Not OpenSCAD compatible. Sorry.

hole_dia=3;        //Bolts
hole_extra_r=0.0;
x_spacing=36;      //Spacing between bolts (x)
y_spacing=19;      //Spacing between bolts (y)
pinion_w=8;

padding=5;         //Space aronud edge
top=2.5;           //These two are the thickness
bottom=-0.7;
 
yedge  = (y_spacing + hole_dia + padding)/2;

module cone(pos, vec, r1, r2)
{
	//Extrude extrudes along the vector 0, 0, 1
	//
	//We want the result to point along vec. If we cross pos and vec and pos, then we get a vector
	//to rotate around, and the amount to rotate by.

	vecl = sqrt(vec[2]*vec[2] + vec[1]*vec[1] + vec[0]*vec[0]);
	vecn = [vec[0]/vecl, vec[1]/vecl, vec[2]/vecl];
	
	
	direc = [-vecn[1], vecn[0], 0];
	angle = asin(sqrt(direc[2]*direc[2] + direc[1]*direc[1] + direc[0]*direc[0]))*180/pi;


	if(abs(angle) < 0.0001)
	{
		direc = [1,0,0];
	}

	if(vec[2] < 0)
		angle = -(angle + 180);

	translate(pos)
		rotate(angle, direc)
			cylinder(h=vecl, r1=r1, r2=r2);
}

//Based on the BRLCAD function
module rcc(pos, vec, r)
{
	cone(pos, vec, r, r);
}


//Based on the BRLCAD function
module cuboid(xs, xe, ys, ye, zs, ze){
	//The main cuboid
	translate([xs, ys, zs])
		cube(size=[xe-xs, ye-ys, ze-zs]);
}

//Cuboid rounded off in the Z azis
module rounded_cuboid(xs, xe, ys, ye, zs ,ze, r){
	union(){
		difference(){
			cuboid(xs, xe, ys, ye, zs, ze);
			
			for(i=[0:3])
			{
				j=floor(i/2);
				b0 = ( i-2*floor(i/2));
				b1 = ( j-2*floor(j/2));

				x = b0==0?xs:xe;
				y = b1==0?ys:ye;
				rcc([x, y, zs], [0, 0, ze-zs], r);	
			}
		}

		//Put chunks back in...
		for(i=[0:3])
		{
			j=floor(i/2);
			b0 = ( i-2*floor(i/2));
			b1 = ( j-2*floor(j/2));

			x = b0==0?xs+r:xe-r;
			y = b1==0?ys+r:ye-r;
			rcc([x, y, zs], [0, 0, ze-zs], r);	
		}

	}
}



module main_bit(){
	difference(){
		xext = (x_spacing + hole_dia + padding)/2;
		yext = (y_spacing + hole_dia + padding)/2;
		r=hole_dia/2+padding/2;

		rounded_cuboid(-xext, xext, -yext, yext, bottom, top, r);
		f=10;

		x1e = (x_spacing-hole_dia-padding)/2;
		rounded_cuboid(-x1e, x1e, -pinion_w/2-r, yext, bottom, top, r);
		cuboid(-x1e, x1e, 0, yext, bottom, top, r);
		
		rcc([-x_spacing/2, -y_spacing/2, bottom-f], [0, 0, top-bottom+2*f], hole_dia/2 + hole_extra_r);
		rcc([-x_spacing/2,  y_spacing/2, bottom-f], [0, 0, top-bottom+2*f], hole_dia/2 + hole_extra_r);
		rcc([ x_spacing/2,  y_spacing/2, bottom-f], [0, 0, top-bottom+2*f], hole_dia/2 + hole_extra_r);
		rcc([ x_spacing/2, -y_spacing/2, bottom-f], [0, 0, top-bottom+2*f], hole_dia/2 + hole_extra_r);
	}
}


//Bottom of teeth lie at z=0
//Teeth extend up to z=depth
//Solid bit extends down to z=-base
module pinion(length, width, spacing, depth, base){
	s = 2*pi/spacing;
	translate([0, 0, -base]){
		//Triangular wave using first 3 fourier components.
		linear_extrude(height(x, y) = base+depth*(1+sin(x*s) - sin(3*x*s)/9 + sin(5*x*s)/25 )){
			square(length, width);
		}
	}
}

difference(r=0){
	union(r=4){
		difference(){
			main_bit();
			pinion_l = x_spacing + hole_dia + padding + 20;

			translate([-pinion_l/2, -pinion_w/2, 0]){
				pinion(pinion_l, pinion_w, 2, 0.5, 1);
			}
		}

		//Fan lug block
		difference(r=2){
			rounded_cuboid(-10, 10, -yedge-15, -yedge, -10, top, 3);
			cuboid(-3.5, 3.5, -yedge-20, -yedge+5, -50, 50);

		}
	}
	
	//Chunk out the middle of the lug block to breate the lugs
	cuboid(-20, 20, -20, 20, top, top+20);
	//Hole through the lugs to take bolt.
	rcc([-20, -yedge-10, -5], [40, 0, 0], 2);
}
